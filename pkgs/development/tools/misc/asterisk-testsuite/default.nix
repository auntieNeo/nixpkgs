{ stdenv, fetchsvn, makeWrapper, asterisk, lua51Packages, python, pythonPackages }:

let
  asterisk-dev = 
    (stdenv.lib.overrideDerivation asterisk (attrs: rec {
      name = "asterisk-dev-${attrs.version}";

      configureFlags = attrs.configureFlags + " --enable-dev-mode";
      menuselectFlags = attrs.menuselectFlags + " --enable TEST_FRAMEWORK";

      NIX_CFLAGS_COMPILE = "-g -mtune=generic";
    }));

  asteriskConf = stdenv.mkDerivation {
    name = "asterisk.conf";

    "asterisk_conf" = ''
      [directories]
      astetcdir=/etc/asterisk
      astmoddir=${asterisk-dev}/lib/asterisk/modules
      astvarlibdir=/var/lib/asterisk
      astdbdir=/var/lib/asterisk
      astkeydir=/var/lib/asterisk
      astdatadir=/var/lib/asterisk
      astagidir=/var/lib/asterisk/agi-bin
      astspooldir=/var/spool/asterisk
      astrundir=/var/run/asterisk
      astlogdir=/var/log/asterisk
    '';

    buildCommand = ''
      echo "$asterisk_conf" > "$out"
    '';
  };

  asteriskEtc = stdenv.mkDerivation {
    name = "asterisk-etc";

    "manager_conf" = ''
      [general]
      enabled = yes

      [user]
      secret = mysecret
;      deny = 0.0.0.0/0.0.0.0
;      permit = 127.0.0.1/255.255.255.255
      permit = 0.0.0.0/0.0.0.0
      read = all,system,call,log,verbose,command,agent,user,config
      write = all,system,call,log,verbose,command,agent,user,config
    '';

    "modules_conf" = ''
      [modules]
      autoload=yes
    '';

    buildCommand = ''
      mkdir -p "$out"
      echo "$manager_conf" > "$out"/manager.conf
      echo "$modules_conf" > "$out"/modules.conf
    '';
  };
in
stdenv.mkDerivation rec {
  name = "asterisk-testsuite-svn-${version}";
  version = "6564";

  src = fetchsvn {
    url = http://svn.asterisk.org/svn/testsuite/asterisk/trunk;
    rev = "${version}";
    sha256 = "047jzj7a2i7qj0gsb2yl5zwnyak632paqrkx0mhbnc22ivzs83s0";
  };

  patches = [
    # Patch sections of code with paths and insert placeholders
    # (see the postPatch section)
    ./fix-paths.patch
  ];

  postPatch = ''
    # Substitute paths (see ./fix-paths.patch)
    sed -i 's|@ast_binary@|${asterisk-dev}/bin/asterisk|g' \
        ./lib/python/asterisk/asterisk.py \
        ./lib/python/asterisk/version.py
    sed -i 's|@ast_etc@|${asteriskEtc}|g' \
        ./lib/python/asterisk/asterisk.py
    sed -i 's|@ast_conf@|${asteriskConf}|g' \
        ./lib/python/asterisk/asterisk.py
    sed -i 's|@ast_buildopts@|${asterisk-dev}/include/asterisk/buildopts.h|g' \
        ./lib/python/asterisk/buildoptions.py
  '';

  buildInputs = [ lua51Packages.lua makeWrapper python ] ++ asterisk-dev.buildInputs;
  propagatedBuildInputs = with pythonPackages; [ pyyaml starpy twisted ];

  postBuild = ''
    # Point the python scripts to the bulidopts.h header generated by the
    # build of Asterisk that we are testing
    sed -i 's|\.\.\(/include/asterisk/buildopts\.h\)|${asterisk-dev}\1|' \
        ./lib/python/asterisk/buildoptions.py

#    # Help python scripts find the asterisk binary in the asterisk derivation
#    grep -R '/usr/sbin/asterisk' ./lib/python | uniq | \
#    xargs sed -i 's|/usr/sbin/asterisk|${asterisk-dev}/bin/asterisk'

#    # Help scripts copy Asterisk configuration files from the asterisk derivation
#    sed -i 's|\(default_etc_directory = "\)\(/etc/asterisk"\)|\1${asterisk-dev}\2|' \
#        ./lib/python/asterisk/asterisk.py

    # Help runtests.py find test_runner.py
    sed -i 's|\.\(/lib/python/asterisk/test_runner.py\)|'"$out"'\1|' \
        ./runtests.py
  '';

  preInstall = ''
    sed -i 's|^PREFIX?=.*|PREFIX?='"$out"'|' ./asttest/Makefile
  '';

  postInstall = ''
    tests="$out/share/asterisk-testsuite/tests"

    mkdir -p $out/share/asterisk-testsuite
    cp -r ./tests $out/share/asterisk-testsuite/

    mkdir -p $out/lib
    cp -r ./lib/python $out/lib/

    makeWrapper $out/bin/asttest $out/bin/asttest-wrapped \
    --run "cp -r $tests /tmp/asttest-"'$$' \
    --add-flags "-a ${asterisk-dev} /tmp/asttest-"'$$'

    cp ./runtests.py $out/bin/asterisk-runtests.py
    wrapProgram $out/bin/asterisk-runtests.py \
    --run "mkdir -p /tmp/asterisk-runtests-"'$$'"; cp -r $tests /tmp/asterisk-runtests-"'$$'"/; cd /tmp/asterisk-runtests-"'$$' \
    --prefix PYTHONPATH : "$PYTHONPATH:$out/lib/python"
  '';
}
